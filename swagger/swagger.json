{
  "openapi": "3.0.3",
  "info": {
    "title": "Churchlify API",
    "version": "1.0.0",
    "description": "Comprehensive Churchlify API documentation"
  },
  "paths": {
    "/Assignment/create": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Post /Assignment/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Assignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Assignment/find/{id}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get /Assignment/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Assignment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Assignment/update/{id}": {
      "patch": {
        "tags": [
          "Assignment"
        ],
        "summary": "Patch /Assignment/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Assignment"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Assignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Assignment/list": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get /Assignment/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Assignment/list/{userId}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get /Assignment/list/{userId}",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Assignment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Assignment/delete/{id}": {
      "delete": {
        "tags": [
          "Assignment"
        ],
        "summary": "Delete /Assignment/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Assignment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Assignment/{churchId}/{userId}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get /Assignment/{churchId}/{userId}",
        "parameters": [
          {
            "name": "churchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Assignment"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Assignment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Post /Auth/register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Auth/protected": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get /Auth/protected",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Post /Auth/login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Chat/turn-credentials": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get /Chat/turn-credentials",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chat"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Chat/rooms": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Post /Chat/rooms",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Chat"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chat"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Chat/rooms/join": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Post /Chat/rooms/join",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Chat"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chat"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/CheckIn/initiate": {
      "post": {
        "tags": [
          "CheckIn"
        ],
        "summary": "Post /CheckIn/initiate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/CheckIn/{id}/status": {
      "patch": {
        "tags": [
          "CheckIn"
        ],
        "summary": "Patch /CheckIn/{id}/status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced CheckIn"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/CheckIn/find/{id}": {
      "get": {
        "tags": [
          "CheckIn"
        ],
        "summary": "Get /CheckIn/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced CheckIn"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/CheckIn/list": {
      "get": {
        "tags": [
          "CheckIn"
        ],
        "summary": "Get /CheckIn/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/CheckIn/list/{child}": {
      "get": {
        "tags": [
          "CheckIn"
        ],
        "summary": "Get /CheckIn/list/{child}",
        "parameters": [
          {
            "name": "child",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced CheckIn"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/CheckIn/delete/{id}": {
      "delete": {
        "tags": [
          "CheckIn"
        ],
        "summary": "Delete /CheckIn/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced CheckIn"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Church/create": {
      "post": {
        "tags": [
          "Church"
        ],
        "summary": "Post /Church/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Church"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Church"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Church/find/{id}": {
      "get": {
        "tags": [
          "Church"
        ],
        "summary": "Get /Church/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Church"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Church"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Church/update/{id}": {
      "put": {
        "tags": [
          "Church"
        ],
        "summary": "Put /Church/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Church"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Church"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Church"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Church/list": {
      "get": {
        "tags": [
          "Church"
        ],
        "summary": "Get /Church/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Church"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Church/delete/{id}": {
      "delete": {
        "tags": [
          "Church"
        ],
        "summary": "Delete /Church/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Church"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Church"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Devotion/create": {
      "post": {
        "tags": [
          "Devotion"
        ],
        "summary": "Post /Devotion/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Devotion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Devotion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Devotion/find/{id}": {
      "get": {
        "tags": [
          "Devotion"
        ],
        "summary": "Get /Devotion/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Devotion"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Devotion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Devotion/update/{id}": {
      "patch": {
        "tags": [
          "Devotion"
        ],
        "summary": "Patch /Devotion/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Devotion"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Devotion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Devotion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Devotion/list": {
      "get": {
        "tags": [
          "Devotion"
        ],
        "summary": "Get /Devotion/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Devotion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Devotion/list/{church}": {
      "get": {
        "tags": [
          "Devotion"
        ],
        "summary": "Get /Devotion/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Devotion"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Devotion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Devotion/delete/{id}": {
      "delete": {
        "tags": [
          "Devotion"
        ],
        "summary": "Delete /Devotion/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Devotion"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Devotion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Event/create": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Post /Event/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Event/find/{id}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get /Event/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Event"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Event/findByDate/{date}/{church}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get /Event/findByDate/{date}/{church}",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Event"
          },
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Event"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Event/findByDate/{date}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get /Event/findByDate/{date}",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Event"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Event/update/{id}": {
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Put /Event/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Event"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Event/list": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get /Event/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Event/list/{church}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get /Event/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Event"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Event/delete/{id}": {
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Delete /Event/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Event"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Events/create": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Post /Events/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Events"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Events/find/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get /Events/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Events"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Events/findByDate/{date}/{church}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get /Events/findByDate/{date}/{church}",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Events"
          },
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Events"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Events/findByDate/{date}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get /Events/findByDate/{date}",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Events"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Events/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get /Events/events",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Events/upcoming": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get /Events/upcoming",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Events/update/{id}": {
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Put /Events/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Events"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Events"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Events/list": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get /Events/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Events/list/{church}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get /Events/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Events"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Events/delete/{id}": {
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Delete /Events/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Events"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Events/update-checkin-status/{id}": {
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Put /Events/update-checkin-status/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Events"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Events"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Fellowship/create": {
      "post": {
        "tags": [
          "Fellowship"
        ],
        "summary": "Post /Fellowship/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fellowship"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fellowship"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Fellowship/find/{id}": {
      "get": {
        "tags": [
          "Fellowship"
        ],
        "summary": "Get /Fellowship/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Fellowship"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fellowship"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Fellowship/update/{id}": {
      "patch": {
        "tags": [
          "Fellowship"
        ],
        "summary": "Patch /Fellowship/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Fellowship"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fellowship"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fellowship"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Fellowship/list": {
      "get": {
        "tags": [
          "Fellowship"
        ],
        "summary": "Get /Fellowship/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fellowship"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Fellowship/list/{church}": {
      "get": {
        "tags": [
          "Fellowship"
        ],
        "summary": "Get /Fellowship/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Fellowship"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fellowship"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Fellowship/delete/{id}": {
      "delete": {
        "tags": [
          "Fellowship"
        ],
        "summary": "Delete /Fellowship/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Fellowship"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fellowship"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Kid/create": {
      "post": {
        "tags": [
          "Kid"
        ],
        "summary": "Post /Kid/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Kid/find/{id}": {
      "get": {
        "tags": [
          "Kid"
        ],
        "summary": "Get /Kid/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Kid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Kid/update/{id}": {
      "put": {
        "tags": [
          "Kid"
        ],
        "summary": "Put /Kid/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Kid"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Kid/list": {
      "get": {
        "tags": [
          "Kid"
        ],
        "summary": "Get /Kid/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Kid/list/{parent}": {
      "get": {
        "tags": [
          "Kid"
        ],
        "summary": "Get /Kid/list/{parent}",
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Kid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Kid/delete/{id}": {
      "delete": {
        "tags": [
          "Kid"
        ],
        "summary": "Delete /Kid/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Kid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Ministry/create": {
      "post": {
        "tags": [
          "Ministry"
        ],
        "summary": "Post /Ministry/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ministry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ministry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Ministry/find/{id}": {
      "get": {
        "tags": [
          "Ministry"
        ],
        "summary": "Get /Ministry/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Ministry"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ministry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Ministry/update/{id}": {
      "patch": {
        "tags": [
          "Ministry"
        ],
        "summary": "Patch /Ministry/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Ministry"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ministry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ministry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Ministry/list": {
      "get": {
        "tags": [
          "Ministry"
        ],
        "summary": "Get /Ministry/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ministry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Ministry/list/{church}": {
      "get": {
        "tags": [
          "Ministry"
        ],
        "summary": "Get /Ministry/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Ministry"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ministry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Ministry/delete/{id}": {
      "delete": {
        "tags": [
          "Ministry"
        ],
        "summary": "Delete /Ministry/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Ministry"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ministry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Module/create": {
      "post": {
        "tags": [
          "Module"
        ],
        "summary": "Post /Module/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Module"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Module/find/{id}": {
      "get": {
        "tags": [
          "Module"
        ],
        "summary": "Get /Module/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Module"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Module/update/{id}": {
      "patch": {
        "tags": [
          "Module"
        ],
        "summary": "Patch /Module/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Module"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Module"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Module/list": {
      "get": {
        "tags": [
          "Module"
        ],
        "summary": "Get /Module/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Module/list/{church}": {
      "get": {
        "tags": [
          "Module"
        ],
        "summary": "Get /Module/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Module"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Module/delete/{id}": {
      "delete": {
        "tags": [
          "Module"
        ],
        "summary": "Delete /Module/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Module"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Payment/create": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Post /Payment/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Payment/find/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get /Payment/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Payment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Payment/update/{id}": {
      "patch": {
        "tags": [
          "Payment"
        ],
        "summary": "Patch /Payment/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Payment"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Payment/list": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get /Payment/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Payment/list/{church}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get /Payment/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Payment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Payment/delete/{id}": {
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Delete /Payment/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Payment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Prayer/create": {
      "post": {
        "tags": [
          "Prayer"
        ],
        "summary": "Post /Prayer/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prayer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prayer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Prayer/find/{id}": {
      "get": {
        "tags": [
          "Prayer"
        ],
        "summary": "Get /Prayer/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Prayer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prayer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Prayer/update/{id}": {
      "patch": {
        "tags": [
          "Prayer"
        ],
        "summary": "Patch /Prayer/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Prayer"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prayer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prayer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Prayer/list": {
      "get": {
        "tags": [
          "Prayer"
        ],
        "summary": "Get /Prayer/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prayer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Prayer/list/{church}": {
      "get": {
        "tags": [
          "Prayer"
        ],
        "summary": "Get /Prayer/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Prayer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prayer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Prayer/delete/{id}": {
      "delete": {
        "tags": [
          "Prayer"
        ],
        "summary": "Delete /Prayer/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Prayer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prayer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Settings/create": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Post /Settings/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Settings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Settings/find/{id}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get /Settings/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Settings"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Settings/update/{id}": {
      "patch": {
        "tags": [
          "Settings"
        ],
        "summary": "Patch /Settings/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Settings"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Settings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Settings/list": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get /Settings/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Settings/list/{church}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get /Settings/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Settings"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Settings/delete/{id}": {
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "Delete /Settings/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Settings"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Subscription/create": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Post /Subscription/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Subscription/find/{id}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get /Subscription/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Subscription"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Subscription/update/{id}": {
      "patch": {
        "tags": [
          "Subscription"
        ],
        "summary": "Patch /Subscription/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Subscription"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Subscription/list": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get /Subscription/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Subscription/list/{church}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get /Subscription/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Subscription"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Subscription/delete/{id}": {
      "delete": {
        "tags": [
          "Subscription"
        ],
        "summary": "Delete /Subscription/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Subscription"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Testimony/create": {
      "post": {
        "tags": [
          "Testimony"
        ],
        "summary": "Post /Testimony/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Testimony"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Testimony"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Testimony/find/{id}": {
      "get": {
        "tags": [
          "Testimony"
        ],
        "summary": "Get /Testimony/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Testimony"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Testimony"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Testimony/update/{id}": {
      "patch": {
        "tags": [
          "Testimony"
        ],
        "summary": "Patch /Testimony/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Testimony"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Testimony"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Testimony"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Testimony/list": {
      "get": {
        "tags": [
          "Testimony"
        ],
        "summary": "Get /Testimony/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Testimony"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Testimony/list/{church}": {
      "get": {
        "tags": [
          "Testimony"
        ],
        "summary": "Get /Testimony/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Testimony"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Testimony"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Testimony/delete/{id}": {
      "delete": {
        "tags": [
          "Testimony"
        ],
        "summary": "Delete /Testimony/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Testimony"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Testimony"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Timezone/create": {
      "post": {
        "tags": [
          "Timezone"
        ],
        "summary": "Post /Timezone/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Timezone"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timezone"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Timezone/find/{id}": {
      "get": {
        "tags": [
          "Timezone"
        ],
        "summary": "Get /Timezone/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Timezone"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timezone"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Timezone/update/{id}": {
      "patch": {
        "tags": [
          "Timezone"
        ],
        "summary": "Patch /Timezone/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Timezone"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Timezone"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timezone"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Timezone/list": {
      "get": {
        "tags": [
          "Timezone"
        ],
        "summary": "Get /Timezone/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timezone"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/Timezone/delete/{id}": {
      "delete": {
        "tags": [
          "Timezone"
        ],
        "summary": "Delete /Timezone/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced Timezone"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timezone"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/User/create": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Post /User/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/User/find/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get /User/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced User"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/User/findByUid/{firebaseId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get /User/findByUid/{firebaseId}",
        "parameters": [
          {
            "name": "firebaseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced User"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/User/update/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Put /User/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced User"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Patch /User/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced User"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/User/list": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get /User/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/User/list/{church}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get /User/list/{church}",
        "parameters": [
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced User"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/User/delete/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete /User/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced User"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "location.type": {
            "type": "string",
            "default": "Point",
            "enum": [
              "Point"
            ]
          },
          "location.coordinates": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Location array: [Longitude, Latitude]",
            "minItems": 2,
            "maxItems": 2,
            "example": [
              0,
              0
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "state",
          "postalCode",
          "street",
          "city",
          "country",
          "location.type",
          "location.coordinates"
        ]
      },
      "Assignment": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "fellowshipId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "ministryId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "role": {
            "type": "string",
            "default": "member"
          },
          "availability": {
            "type": "string"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "approved"
            ]
          },
          "dateAssigned": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "userId",
          "role",
          "status",
          "dateAssigned"
        ]
      },
      "Audit": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "activity": {
            "type": "string"
          },
          "params": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "response": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "url",
          "activity",
          "params",
          "query",
          "payload",
          "response"
        ]
      },
      "Auth": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "CheckIn": {
        "type": "object",
        "properties": {
          "child": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckInChildItem"
            }
          },
          "status": {
            "type": "string",
            "default": "check_in_request",
            "enum": [
              "check_in_request",
              "dropped_off",
              "pickup_request",
              "picked_up"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "child",
          "expiresAt"
        ]
      },
      "Church": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "createdBy": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "shortName": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "timeZone": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "createdBy",
          "shortName",
          "emailAddress",
          "phoneNumber",
          "address",
          "timeZone"
        ]
      },
      "Devotion": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {
            "type": "string"
          },
          "scripture": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "author": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DevotionTagsItem"
            }
          },
          "image": {
            "type": "string"
          },
          "isPublished": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "title",
          "scripture",
          "content",
          "date",
          "author"
        ]
      },
      "Event": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "createdBy": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "flier": {
            "type": "string"
          },
          "allowKidsCheckin": {
            "type": "boolean",
            "default": false
          },
          "rsvp": {
            "type": "boolean",
            "default": false
          },
          "checkinStartTime": {
            "type": "string"
          },
          "isRecurring": {
            "type": "boolean",
            "default": false
          },
          "recurrence.frequency": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "YEARLY"
            ]
          },
          "recurrence.interval": {
            "type": "number",
            "default": 1
          },
          "recurrence.daysOfWeek": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Location array: [Longitude, Latitude]",
            "minItems": 2,
            "maxItems": 2,
            "example": [
              0,
              0
            ]
          },
          "recurrence.endDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "createdBy",
          "title",
          "startDate",
          "endDate",
          "startTime",
          "endTime",
          "allowKidsCheckin",
          "rsvp",
          "checkinStartTime",
          "recurrence.frequency"
        ]
      },
      "EventInstance": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "flier": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "isCheckinOpen": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "eventId",
          "church",
          "date",
          "startTime",
          "endTime"
        ]
      },
      "Events": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "createdBy": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "flier": {
            "type": "string"
          },
          "allowKidsCheckin": {
            "type": "boolean",
            "default": false
          },
          "rsvp": {
            "type": "boolean",
            "default": false
          },
          "checkinStartTime": {
            "type": "string"
          },
          "isRecurring": {
            "type": "boolean",
            "default": false
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "isInstance": {
            "type": "boolean",
            "default": false
          },
          "masterEventId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "originalStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "nextCheckDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "createdBy",
          "title",
          "startDate",
          "endDate",
          "startTime",
          "endTime",
          "allowKidsCheckin",
          "rsvp",
          "checkinStartTime"
        ]
      },
      "Fellowship": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "dayOfWeek": {
            "type": "string"
          },
          "meetingTime": {
            "type": "string"
          },
          "leaderId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "address",
          "church"
        ]
      },
      "Kid": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          },
          "allergies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "color": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "parent",
          "firstName",
          "lastName",
          "dateOfBirth"
        ]
      },
      "Ministry": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "leaderId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church"
        ]
      },
      "Module": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "baseCost": {
            "type": "number"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "baseCost"
        ]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "subscription": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "paymentId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "succeeded",
              "failed",
              "refunded"
            ]
          },
          "metadata": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "user",
          "church",
          "subscription",
          "paymentId",
          "amount",
          "status"
        ]
      },
      "Prayer": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "author": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "anonymous": {
            "type": "boolean",
            "default": false
          },
          "isPublic": {
            "type": "boolean",
            "default": true
          },
          "title": {
            "type": "string"
          },
          "prayerRequest": {
            "type": "string"
          },
          "urgency": {
            "type": "string",
            "default": "medium",
            "enum": [
              "low",
              "medium",
              "high"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "author",
          "title",
          "prayerRequest"
        ]
      },
      "Settings": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "key",
          "value"
        ]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionModulesItem"
            }
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "default": "pending",
            "enum": [
              "active",
              "expired",
              "cancelled",
              "pending"
            ]
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPaymentsItem"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "expiryDate"
        ]
      },
      "Testimony": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "author": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "anonymous": {
            "type": "boolean",
            "default": false
          },
          "isPublic": {
            "type": "boolean",
            "default": false
          },
          "title": {
            "type": "string"
          },
          "story": {
            "type": "string"
          },
          "impact": {
            "type": "string"
          },
          "gratitude": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "author",
          "title",
          "story"
        ]
      },
      "Timezone": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "continent": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value",
          "continent"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          },
          "isMarried": {
            "type": "boolean",
            "default": false
          },
          "anniversaryDate": {
            "type": "string",
            "format": "date-time"
          },
          "emailAddress": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "photoUrl": {
            "type": "string"
          },
          "pushToken": {
            "type": "string"
          },
          "firebaseId": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "default": "member",
            "enum": [
              "admin",
              "member",
              "churchAdmin"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "dateOfBirth",
          "emailAddress",
          "phoneNumber",
          "address",
          "firebaseId"
        ]
      },
      "CheckInChildItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "ref": {
            "type": "string"
          }
        }
      },
      "DevotionTagsItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "trim": {
            "type": "string"
          }
        }
      },
      "RecurrenceByWeekDayItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "number"
          }
        }
      },
      "RecurrenceByMonthDayItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "number"
          }
        }
      },
      "RecurrenceExceptionsItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Recurrence": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "YEARLY"
            ]
          },
          "interval": {
            "type": "number",
            "default": 1
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "endAfterOccurrences": {
            "type": "number"
          },
          "byWeekDay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurrenceByWeekDayItem"
            }
          },
          "byMonthDay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurrenceByMonthDayItem"
            }
          },
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurrenceExceptionsItem"
            }
          }
        },
        "required": [
          "frequency"
        ]
      },
      "SubscriptionModulesItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "ref": {
            "type": "string"
          },
          "required": {
            "type": "string"
          }
        }
      },
      "SubscriptionPaymentsItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "ref": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}