{
  "openapi": "3.0.3",
  "info": {
    "title": "Churchlify API",
    "version": "1.0.0",
    "description": "Comprehensive Churchlify API documentation"
  },
  "paths": {
    "/assignment/create": {
      "post": {
        "tags": [
          "assignment"
        ],
        "summary": "Post /assignment/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/assignment/find/{id}": {
      "get": {
        "tags": [
          "assignment"
        ],
        "summary": "Get /assignment/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced assignment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/assignment/update/{id}": {
      "patch": {
        "tags": [
          "assignment"
        ],
        "summary": "Patch /assignment/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced assignment"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/assignment/list": {
      "get": {
        "tags": [
          "assignment"
        ],
        "summary": "Get /assignment/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/assignment/list/{userId}": {
      "get": {
        "tags": [
          "assignment"
        ],
        "summary": "Get /assignment/list/{userId}",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced assignment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/assignment/delete/{id}": {
      "delete": {
        "tags": [
          "assignment"
        ],
        "summary": "Delete /assignment/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced assignment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/assignment/{userId}": {
      "get": {
        "tags": [
          "assignment"
        ],
        "summary": "Get /assignment/{userId}",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced assignment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Post /auth/register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/protected": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get /auth/protected",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Post /auth/login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/chat/turn-credentials": {
      "get": {
        "tags": [
          "chat"
        ],
        "summary": "Get /chat/turn-credentials",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/chat/rooms": {
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Post /chat/rooms",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/chat"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/chat/rooms/join": {
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Post /chat/rooms/join",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/chat"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/checkIn/initiate": {
      "post": {
        "tags": [
          "checkIn"
        ],
        "summary": "Post /checkIn/initiate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/checkIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/checkIn/{id}/status": {
      "patch": {
        "tags": [
          "checkIn"
        ],
        "summary": "Patch /checkIn/{id}/status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced checkIn"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/checkIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/checkIn/find/{id}": {
      "get": {
        "tags": [
          "checkIn"
        ],
        "summary": "Get /checkIn/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced checkIn"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/checkIn/list": {
      "get": {
        "tags": [
          "checkIn"
        ],
        "summary": "Get /checkIn/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/checkIn/list/{child}": {
      "get": {
        "tags": [
          "checkIn"
        ],
        "summary": "Get /checkIn/list/{child}",
        "parameters": [
          {
            "name": "child",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced checkIn"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/checkIn/delete/{id}": {
      "delete": {
        "tags": [
          "checkIn"
        ],
        "summary": "Delete /checkIn/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced checkIn"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkIn"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/church/create": {
      "post": {
        "tags": [
          "church"
        ],
        "summary": "Post /church/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/church"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/church"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/church/find/{id}": {
      "get": {
        "tags": [
          "church"
        ],
        "summary": "Get /church/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced church"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/church"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/church/update/{id}": {
      "put": {
        "tags": [
          "church"
        ],
        "summary": "Put /church/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced church"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/church"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/church"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/church/list": {
      "get": {
        "tags": [
          "church"
        ],
        "summary": "Get /church/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/church"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/church/delete/{id}": {
      "delete": {
        "tags": [
          "church"
        ],
        "summary": "Delete /church/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced church"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/church"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/devotion/create": {
      "post": {
        "tags": [
          "devotion"
        ],
        "summary": "Post /devotion/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/devotion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/devotion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/devotion/find/{id}": {
      "get": {
        "tags": [
          "devotion"
        ],
        "summary": "Get /devotion/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced devotion"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/devotion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/devotion/update/{id}": {
      "patch": {
        "tags": [
          "devotion"
        ],
        "summary": "Patch /devotion/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced devotion"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/devotion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/devotion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/devotion/list": {
      "get": {
        "tags": [
          "devotion"
        ],
        "summary": "Get /devotion/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/devotion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/devotion/delete/{id}": {
      "delete": {
        "tags": [
          "devotion"
        ],
        "summary": "Delete /devotion/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced devotion"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/devotion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/items": {
      "get": {
        "tags": [
          "donations"
        ],
        "summary": "Get /donations/items",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "donations"
        ],
        "summary": "Post /donations/items",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/donations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/stripe/pay": {
      "post": {
        "tags": [
          "donations"
        ],
        "summary": "Post /donations/stripe/pay",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/donations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/stripe/create-subscription": {
      "post": {
        "tags": [
          "donations"
        ],
        "summary": "Post /donations/stripe/create-subscription",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/donations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/stripe/session/{id}": {
      "get": {
        "tags": [
          "donations"
        ],
        "summary": "Get /donations/stripe/session/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced donations"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/paypal/create": {
      "post": {
        "tags": [
          "donations"
        ],
        "summary": "Post /donations/paypal/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/donations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/paypal/create-order": {
      "post": {
        "tags": [
          "donations"
        ],
        "summary": "Post /donations/paypal/create-order",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/donations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/paypal/capture-order": {
      "post": {
        "tags": [
          "donations"
        ],
        "summary": "Post /donations/paypal/capture-order",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/donations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/paypal/create-subscription": {
      "post": {
        "tags": [
          "donations"
        ],
        "summary": "Post /donations/paypal/create-subscription",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/donations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/paypal/client-token": {
      "get": {
        "tags": [
          "donations"
        ],
        "summary": "Get /donations/paypal/client-token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/paypal/bt-token": {
      "get": {
        "tags": [
          "donations"
        ],
        "summary": "Get /donations/paypal/bt-token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/paypal/pay": {
      "post": {
        "tags": [
          "donations"
        ],
        "summary": "Post /donations/paypal/pay",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/donations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/paystack/pays": {
      "post": {
        "tags": [
          "donations"
        ],
        "summary": "Post /donations/paystack/pays",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/donations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/donations/paystack/pay": {
      "post": {
        "tags": [
          "donations"
        ],
        "summary": "Post /donations/paystack/pay",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/donations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/donations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/event/create": {
      "post": {
        "tags": [
          "event"
        ],
        "summary": "Post /event/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/event/find/{id}": {
      "get": {
        "tags": [
          "event"
        ],
        "summary": "Get /event/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced event"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/event/findByDate/{date}/{church}": {
      "get": {
        "tags": [
          "event"
        ],
        "summary": "Get /event/findByDate/{date}/{church}",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced event"
          },
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced event"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/event/findByDate/{date}": {
      "get": {
        "tags": [
          "event"
        ],
        "summary": "Get /event/findByDate/{date}",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced event"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/event/update/{id}": {
      "put": {
        "tags": [
          "event"
        ],
        "summary": "Put /event/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced event"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/event/list": {
      "get": {
        "tags": [
          "event"
        ],
        "summary": "Get /event/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/event/delete/{id}": {
      "delete": {
        "tags": [
          "event"
        ],
        "summary": "Delete /event/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced event"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events/create": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Post /events/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/events"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events/find/{id}": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get /events/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced events"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events/findByDate/{date}/{church}": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get /events/findByDate/{date}/{church}",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced events"
          },
          {
            "name": "church",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced events"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events/findByDate/{date}": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get /events/findByDate/{date}",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced events"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events/events": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get /events/events",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events/upcoming": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get /events/upcoming",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events/update/{id}": {
      "put": {
        "tags": [
          "events"
        ],
        "summary": "Put /events/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced events"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/events"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events/list": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get /events/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events/delete/{id}": {
      "delete": {
        "tags": [
          "events"
        ],
        "summary": "Delete /events/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced events"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/events/update-checkin-status/{id}": {
      "put": {
        "tags": [
          "events"
        ],
        "summary": "Put /events/update-checkin-status/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced events"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/events"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fellowship/create": {
      "post": {
        "tags": [
          "fellowship"
        ],
        "summary": "Post /fellowship/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fellowship"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fellowship"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fellowship/find/{id}": {
      "get": {
        "tags": [
          "fellowship"
        ],
        "summary": "Get /fellowship/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced fellowship"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fellowship"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fellowship/update/{id}": {
      "patch": {
        "tags": [
          "fellowship"
        ],
        "summary": "Patch /fellowship/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced fellowship"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fellowship"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fellowship"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fellowship/list": {
      "get": {
        "tags": [
          "fellowship"
        ],
        "summary": "Get /fellowship/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fellowship"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fellowship/delete/{id}": {
      "delete": {
        "tags": [
          "fellowship"
        ],
        "summary": "Delete /fellowship/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced fellowship"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fellowship"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/kid/create": {
      "post": {
        "tags": [
          "kid"
        ],
        "summary": "Post /kid/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/kid/find/{id}": {
      "get": {
        "tags": [
          "kid"
        ],
        "summary": "Get /kid/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced kid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/kid/update/{id}": {
      "put": {
        "tags": [
          "kid"
        ],
        "summary": "Put /kid/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced kid"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/kid/list": {
      "get": {
        "tags": [
          "kid"
        ],
        "summary": "Get /kid/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/kid/list/{parent}": {
      "get": {
        "tags": [
          "kid"
        ],
        "summary": "Get /kid/list/{parent}",
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced kid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/kid/delete/{id}": {
      "delete": {
        "tags": [
          "kid"
        ],
        "summary": "Delete /kid/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced kid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ministry/create": {
      "post": {
        "tags": [
          "ministry"
        ],
        "summary": "Post /ministry/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ministry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ministry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ministry/find/{id}": {
      "get": {
        "tags": [
          "ministry"
        ],
        "summary": "Get /ministry/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced ministry"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ministry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ministry/update/{id}": {
      "patch": {
        "tags": [
          "ministry"
        ],
        "summary": "Patch /ministry/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced ministry"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ministry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ministry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ministry/list": {
      "get": {
        "tags": [
          "ministry"
        ],
        "summary": "Get /ministry/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ministry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ministry/delete/{id}": {
      "delete": {
        "tags": [
          "ministry"
        ],
        "summary": "Delete /ministry/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced ministry"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ministry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/module/create": {
      "post": {
        "tags": [
          "module"
        ],
        "summary": "Post /module/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/module"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/module/find/{id}": {
      "get": {
        "tags": [
          "module"
        ],
        "summary": "Get /module/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced module"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/module/update/{id}": {
      "patch": {
        "tags": [
          "module"
        ],
        "summary": "Patch /module/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced module"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/module"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/module/list": {
      "get": {
        "tags": [
          "module"
        ],
        "summary": "Get /module/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/module/delete/{id}": {
      "delete": {
        "tags": [
          "module"
        ],
        "summary": "Delete /module/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced module"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/module"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/payment/create": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "Post /payment/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/payment/find/{id}": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "Get /payment/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced payment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/payment/update/{id}": {
      "patch": {
        "tags": [
          "payment"
        ],
        "summary": "Patch /payment/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced payment"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/payment/list": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "Get /payment/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/payment/delete/{id}": {
      "delete": {
        "tags": [
          "payment"
        ],
        "summary": "Delete /payment/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced payment"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/prayer/create": {
      "post": {
        "tags": [
          "prayer"
        ],
        "summary": "Post /prayer/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prayer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prayer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/prayer/find/{id}": {
      "get": {
        "tags": [
          "prayer"
        ],
        "summary": "Get /prayer/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced prayer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prayer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/prayer/update/{id}": {
      "patch": {
        "tags": [
          "prayer"
        ],
        "summary": "Patch /prayer/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced prayer"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prayer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prayer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/prayer/list": {
      "get": {
        "tags": [
          "prayer"
        ],
        "summary": "Get /prayer/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prayer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/prayer/delete/{id}": {
      "delete": {
        "tags": [
          "prayer"
        ],
        "summary": "Delete /prayer/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced prayer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prayer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/settings/create": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Post /settings/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/settings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/settings/find/{id}": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get /settings/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced settings"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/settings/update/{id}": {
      "patch": {
        "tags": [
          "settings"
        ],
        "summary": "Patch /settings/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced settings"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/settings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/settings/list": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get /settings/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/settings/payment": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get /settings/payment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/settings/delete/{id}": {
      "delete": {
        "tags": [
          "settings"
        ],
        "summary": "Delete /settings/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced settings"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subscription/create": {
      "post": {
        "tags": [
          "subscription"
        ],
        "summary": "Post /subscription/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subscription/find/{id}": {
      "get": {
        "tags": [
          "subscription"
        ],
        "summary": "Get /subscription/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced subscription"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subscription/update/{id}": {
      "patch": {
        "tags": [
          "subscription"
        ],
        "summary": "Patch /subscription/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced subscription"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subscription/list": {
      "get": {
        "tags": [
          "subscription"
        ],
        "summary": "Get /subscription/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subscription/delete/{id}": {
      "delete": {
        "tags": [
          "subscription"
        ],
        "summary": "Delete /subscription/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced subscription"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/testimony/create": {
      "post": {
        "tags": [
          "testimony"
        ],
        "summary": "Post /testimony/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testimony"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testimony"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/testimony/find/{id}": {
      "get": {
        "tags": [
          "testimony"
        ],
        "summary": "Get /testimony/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced testimony"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testimony"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/testimony/update/{id}": {
      "patch": {
        "tags": [
          "testimony"
        ],
        "summary": "Patch /testimony/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced testimony"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testimony"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testimony"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/testimony/list": {
      "get": {
        "tags": [
          "testimony"
        ],
        "summary": "Get /testimony/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testimony"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/testimony/delete/{id}": {
      "delete": {
        "tags": [
          "testimony"
        ],
        "summary": "Delete /testimony/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced testimony"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testimony"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/timezone/create": {
      "post": {
        "tags": [
          "timezone"
        ],
        "summary": "Post /timezone/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/timezone"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timezone"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/timezone/find/{id}": {
      "get": {
        "tags": [
          "timezone"
        ],
        "summary": "Get /timezone/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced timezone"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timezone"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/timezone/update/{id}": {
      "patch": {
        "tags": [
          "timezone"
        ],
        "summary": "Patch /timezone/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced timezone"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/timezone"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timezone"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/timezone/list": {
      "get": {
        "tags": [
          "timezone"
        ],
        "summary": "Get /timezone/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timezone"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/timezone/delete/{id}": {
      "delete": {
        "tags": [
          "timezone"
        ],
        "summary": "Delete /timezone/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced timezone"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/timezone"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Post /user/create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/user/find/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get /user/find/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced user"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/user/findByUid/{firebaseId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get /user/findByUid/{firebaseId}",
        "parameters": [
          {
            "name": "firebaseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced user"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/user/update/{id}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Put /user/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Patch /user/update/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/user/list": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get /user/list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/user/delete/{id}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete /user/delete/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the referenced user"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/webhook/stripe": {
      "post": {
        "tags": [
          "webhook"
        ],
        "summary": "Post /webhook/stripe",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/webhook/paypal": {
      "post": {
        "tags": [
          "webhook"
        ],
        "summary": "Post /webhook/paypal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "location.type": {
            "type": "string",
            "default": "Point",
            "enum": [
              "Point"
            ]
          },
          "location.coordinates": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Location array: [Longitude, Latitude]",
            "minItems": 2,
            "maxItems": 2,
            "example": [
              0,
              0
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "state",
          "postalCode",
          "street",
          "city",
          "country",
          "location.type",
          "location.coordinates"
        ]
      },
      "Assignment": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "fellowshipId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "ministryId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "role": {
            "type": "string",
            "default": "member"
          },
          "availability": {
            "type": "string"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "approved"
            ]
          },
          "dateAssigned": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "userId",
          "role",
          "status",
          "dateAssigned"
        ]
      },
      "Audit": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "activity": {
            "type": "string"
          },
          "params": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "headers": {
            "type": "string"
          },
          "response": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "url",
          "activity",
          "params",
          "query",
          "payload",
          "headers",
          "response"
        ]
      },
      "Auth": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "CheckIn": {
        "type": "object",
        "properties": {
          "child": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckInChildItem"
            }
          },
          "status": {
            "type": "string",
            "default": "check_in_request",
            "enum": [
              "check_in_request",
              "dropped_off",
              "pickup_request",
              "picked_up"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "child",
          "expiresAt"
        ]
      },
      "Church": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "createdBy": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "shortName": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "timeZone": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "createdBy",
          "shortName",
          "emailAddress",
          "phoneNumber",
          "address",
          "timeZone"
        ]
      },
      "Devotion": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {
            "type": "string"
          },
          "scripture": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "author": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DevotionTagsItem"
            }
          },
          "image": {
            "type": "string"
          },
          "isPublished": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "title",
          "scripture",
          "content",
          "date",
          "author"
        ]
      },
      "DonationItem": {
        "type": "object",
        "properties": {
          "churchId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "suggestedAmounts": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Location array: [Longitude, Latitude]",
            "minItems": 2,
            "maxItems": 2,
            "example": [
              0,
              0
            ]
          },
          "imageUrl": {
            "type": "string"
          },
          "recurringAvailable": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "churchId",
          "title"
        ]
      },
      "DonationPlan": {
        "type": "object",
        "properties": {
          "churchId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "planCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "interval": {
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "annually"
            ]
          },
          "provider": {
            "type": "string",
            "default": "paystack",
            "enum": [
              "paystack",
              "stripe"
            ]
          },
          "providerId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "churchId",
          "planCode",
          "name",
          "amount",
          "interval",
          "provider"
        ]
      },
      "Donation": {
        "type": "object",
        "properties": {
          "churchId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "userId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "donationId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "default": "USD"
          },
          "fund": {
            "type": "string"
          },
          "platform": {
            "type": "string",
            "enum": [
              "stripe",
              "paypal"
            ]
          },
          "status": {
            "type": "string",
            "default": "initiated",
            "enum": [
              "initiated",
              "pending",
              "completed",
              "failed"
            ]
          },
          "stripeSessionId": {
            "type": "string"
          },
          "stripeEventId": {
            "type": "string"
          },
          "stripeMetadata": {
            "type": "object",
            "properties": {}
          },
          "paypalOrderId": {
            "type": "string"
          },
          "paypalCaptureId": {
            "type": "string"
          },
          "paypalWebhookId": {
            "type": "string"
          },
          "paypalPayload": {
            "type": "object",
            "properties": {}
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "webhookReceivedAt": {
            "type": "string",
            "format": "date-time"
          },
          "isRecurring": {
            "type": "boolean",
            "default": false
          },
          "isTestMode": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "churchId",
          "userId",
          "donationId",
          "amount",
          "platform"
        ]
      },
      "Event": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "createdBy": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "flier": {
            "type": "string"
          },
          "allowKidsCheckin": {
            "type": "boolean",
            "default": false
          },
          "rsvp": {
            "type": "boolean",
            "default": false
          },
          "checkinStartTime": {
            "type": "string"
          },
          "isRecurring": {
            "type": "boolean",
            "default": false
          },
          "recurrence.frequency": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "YEARLY"
            ]
          },
          "recurrence.interval": {
            "type": "number",
            "default": 1
          },
          "recurrence.daysOfWeek": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Location array: [Longitude, Latitude]",
            "minItems": 2,
            "maxItems": 2,
            "example": [
              0,
              0
            ]
          },
          "recurrence.endDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "createdBy",
          "title",
          "startDate",
          "endDate",
          "startTime",
          "endTime",
          "allowKidsCheckin",
          "rsvp",
          "checkinStartTime",
          "recurrence.frequency"
        ]
      },
      "EventInstance": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "flier": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "isCheckinOpen": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "eventId",
          "church",
          "date",
          "startTime",
          "endTime"
        ]
      },
      "Events": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "createdBy": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "flier": {
            "type": "string"
          },
          "allowKidsCheckin": {
            "type": "boolean",
            "default": false
          },
          "rsvp": {
            "type": "boolean",
            "default": false
          },
          "checkinStartTime": {
            "type": "string"
          },
          "isRecurring": {
            "type": "boolean",
            "default": false
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "isInstance": {
            "type": "boolean",
            "default": false
          },
          "masterEventId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "originalStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "nextCheckDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "createdBy",
          "title",
          "startDate",
          "endDate",
          "startTime",
          "endTime",
          "allowKidsCheckin",
          "rsvp",
          "checkinStartTime"
        ]
      },
      "Fellowship": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "dayOfWeek": {
            "type": "string"
          },
          "meetingTime": {
            "type": "string"
          },
          "leaderId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "address",
          "church"
        ]
      },
      "Kid": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          },
          "allergies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "color": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "parent",
          "firstName",
          "lastName",
          "dateOfBirth"
        ]
      },
      "Ministry": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "leaderId": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church"
        ]
      },
      "Module": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "baseCost": {
            "type": "number"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "baseCost"
        ]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "subscription": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "paymentId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "succeeded",
              "failed",
              "refunded"
            ]
          },
          "metadata": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "user",
          "church",
          "subscription",
          "paymentId",
          "amount",
          "status"
        ]
      },
      "Prayer": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "author": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "anonymous": {
            "type": "boolean",
            "default": false
          },
          "isPublic": {
            "type": "boolean",
            "default": true
          },
          "title": {
            "type": "string"
          },
          "prayerRequest": {
            "type": "string"
          },
          "urgency": {
            "type": "string",
            "default": "medium",
            "enum": [
              "low",
              "medium",
              "high"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "author",
          "title",
          "prayerRequest"
        ]
      },
      "Settings": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "keyVersion": {
            "type": "string",
            "default": "v1"
          },
          "audit.encryptedBy": {
            "type": "string"
          },
          "audit.decryptedBy": {
            "type": "string"
          },
          "audit.lastDecryptedAt": {
            "type": "string",
            "format": "date-time"
          },
          "audit.lastEncryptedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "key",
          "value",
          "keyVersion"
        ]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionModulesItem"
            }
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "default": "pending",
            "enum": [
              "active",
              "expired",
              "cancelled",
              "pending"
            ]
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPaymentsItem"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "expiryDate"
        ]
      },
      "Testimony": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "author": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "anonymous": {
            "type": "boolean",
            "default": false
          },
          "isPublic": {
            "type": "boolean",
            "default": false
          },
          "title": {
            "type": "string"
          },
          "story": {
            "type": "string"
          },
          "impact": {
            "type": "string"
          },
          "gratitude": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "church",
          "author",
          "title",
          "story"
        ]
      },
      "Timezone": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "continent": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value",
          "continent"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "church": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ]
          },
          "isMarried": {
            "type": "boolean",
            "default": false
          },
          "anniversaryDate": {
            "type": "string",
            "format": "date-time"
          },
          "emailAddress": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "photoUrl": {
            "type": "string"
          },
          "pushToken": {
            "type": "string"
          },
          "firebaseId": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "default": "member",
            "enum": [
              "admin",
              "member",
              "churchAdmin"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "dateOfBirth",
          "emailAddress",
          "phoneNumber",
          "address",
          "firebaseId"
        ]
      },
      "CheckInChildItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "ref": {
            "type": "string"
          }
        }
      },
      "DevotionTagsItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "trim": {
            "type": "string"
          }
        }
      },
      "RecurrenceByWeekDayItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "number"
          }
        }
      },
      "RecurrenceByMonthDayItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "number"
          }
        }
      },
      "RecurrenceExceptionsItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Recurrence": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "YEARLY"
            ]
          },
          "interval": {
            "type": "number",
            "default": 1
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "endAfterOccurrences": {
            "type": "number"
          },
          "byWeekDay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurrenceByWeekDayItem"
            }
          },
          "byMonthDay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurrenceByMonthDayItem"
            }
          },
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurrenceExceptionsItem"
            }
          }
        },
        "required": [
          "frequency"
        ]
      },
      "SubscriptionModulesItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "ref": {
            "type": "string"
          },
          "required": {
            "type": "string"
          }
        }
      },
      "SubscriptionPaymentsItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[a-fA-F0-9]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "ref": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}